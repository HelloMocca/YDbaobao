drop database YDBAOBAO;

drop user 'ydbaobao'@'localhost';

/* DB 생성 */

Create DATABASE YDBAOBAO DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

/* User 생성 및 DB권한 주기 */
Create User ydbaobao@'localhost' identified by 'ydbaobao';

Grant all privileges on YDBAOBAO.* to ydbaobao@'localhost' identified by 'ydbaobao';

/* Table 생성 */

-- MySQL Script generated by MySQL Workbench
-- Tue Jun  2 15:16:02 2015
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema YDBAOBAO
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema YDBAOBAO
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `YDBAOBAO` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `YDBAOBAO` ;

-- -----------------------------------------------------
-- Table `YDBAOBAO`.`GRADE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YDBAOBAO`.`GRADE` (
  `gradeId` INT NOT NULL,
  `discount` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`gradeId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YDBAOBAO`.`CUSTOMERS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YDBAOBAO`.`CUSTOMERS` (
  `customerId` INT NOT NULL,
  `customerName` VARCHAR(45) NOT NULL,
  `customerPassword` VARCHAR(45) NOT NULL,
  `gradeId` INT NOT NULL DEFAULT 6,
  `customerPhone` VARCHAR(45) NOT NULL,
  `customerEmail` VARCHAR(45) NULL,
  `customerAddress` VARCHAR(45) NULL,
  `customerCreateDate` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `customerUpdateDate` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`customerId`),
  INDEX `fk_Customers_Grade1_idx` (`gradeId` ASC),
  CONSTRAINT `fk_Customers_Grade1`
    FOREIGN KEY (`gradeId`)
    REFERENCES `YDBAOBAO`.`GRADE` (`gradeId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YDBAOBAO`.`CATEGORY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YDBAOBAO`.`CATEGORY` (
  `categoryId` INT NOT NULL AUTO_INCREMENT,
  `categoryName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`categoryId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YDBAOBAO`.`BRANDS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YDBAOBAO`.`BRANDS` (
  `brandId` INT NOT NULL AUTO_INCREMENT,
  `brandName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`brandId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YDBAOBAO`.`PRODUCTS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YDBAOBAO`.`PRODUCTS` (
  `productId` INT NOT NULL AUTO_INCREMENT,
  `productName` VARCHAR(45) NOT NULL,
  `brandId` INT NOT NULL,
  `productPrice` INT NOT NULL,
  `productImage` VARCHAR(45) NOT NULL,
  `productDescription` VARCHAR(45) NOT NULL,
  `productCreateDate` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `productUpdateDate` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `categoryId` INT NOT NULL,
  PRIMARY KEY (`productId`),
  INDEX `fk_Products_Category1_idx` (`categoryId` ASC),
  INDEX `fk_Products_Brands1_idx` (`brandId` ASC),
  CONSTRAINT `fk_Products_Category1`
    FOREIGN KEY (`categoryId`)
    REFERENCES `YDBAOBAO`.`CATEGORY` (`categoryId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Products_Brands1`
    FOREIGN KEY (`brandId`)
    REFERENCES `YDBAOBAO`.`BRANDS` (`brandId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YDBAOBAO`.`STOCKS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YDBAOBAO`.`STOCKS` (
  `stockId` INT NOT NULL AUTO_INCREMENT,
  `productId` INT NOT NULL,
  `size` VARCHAR(45) NOT NULL,
  `quantity` VARCHAR(45) NOT NULL,
  `stockUpdateDate` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`stockId`),
  INDEX `fk_Stock_Products1_idx` (`productId` ASC),
  CONSTRAINT `fk_Stock_Products1`
    FOREIGN KEY (`productId`)
    REFERENCES `YDBAOBAO`.`PRODUCTS` (`productId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `YDBAOBAO`.`ORDERS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YDBAOBAO`.`ORDERS` (
  `orderId` INT NOT NULL AUTO_INCREMENT,
  `orderStatus` VARCHAR(45) NOT NULL,
  `customerId` INT NOT NULL,
  `enuri` INT NULL,
  `realPrice` INT NOT NULL,
  `orderAddress` VARCHAR(45) NOT NULL,
  `orderCreateDate` DATETIME NOT NULL,
  `orderUpdateDate` DATETIME NOT NULL,
  PRIMARY KEY (`orderId`),
  INDEX `fk_Orders_Customers1_idx` (`customerId` ASC),
  CONSTRAINT `fk_Orders_Customers1`
    FOREIGN KEY (`customerId`)
    REFERENCES `YDBAOBAO`.`CUSTOMERS` (`customerId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YDBAOBAO`.`ITEMS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YDBAOBAO`.`ITEMS` (
  `itemId` INT NOT NULL AUTO_INCREMENT,
  `productId` INT NOT NULL,
  `orderId` INT NOT NULL,
  `size` VARCHAR(45) NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`itemId`),
  INDEX `fk_XXitem_Products1_idx` (`productId` ASC),
  INDEX `fk_Items_Orders1_idx` (`orderId` ASC),
  CONSTRAINT `fk_XXitem_Products1`
    FOREIGN KEY (`productId`)
    REFERENCES `YDBAOBAO`.`PRODUCTS` (`productId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Items_Orders1`
    FOREIGN KEY (`orderId`)
    REFERENCES `YDBAOBAO`.`ORDERS` (`orderId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
